import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import dotenv from 'dotenv';

// Load environment variables from .env file
dotenv.config();

const banner =
    `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const context = await esbuild.context({
    banner: {
        js: banner,
    },
    entryPoints: ['src/core/main.ts'],
    bundle: true,
    external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        'react',
        ...builtins
    ],
    format: 'cjs',
    target: 'es2018',
    logLevel: "info",
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    outfile: 'main.js',
    define: {
        'global': 'window',
        'process.env.GOOGLE_CLIENT_ID': JSON.stringify(process.env.GOOGLE_CLIENT_ID || ''),
        'process.env.GOOGLE_CLIENT_SECRET': JSON.stringify(process.env.GOOGLE_CLIENT_SECRET || '')
    },
    plugins: [{
        name: 'node-globals',
        setup(build) {
            build.onResolve({ filter: /^(http|https|url|querystring|buffer|stream|crypto|fs|path|os|child_process)$/ }, args => {
                return { external: true }
            })
        }
    }]
});

if (prod) {
    await context.rebuild();
    process.exit(0);
} else {
    await context.watch();
}